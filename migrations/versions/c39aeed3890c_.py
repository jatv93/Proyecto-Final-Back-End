"""empty message

Revision ID: c39aeed3890c
Revises: 
Create Date: 2020-08-01 20:21:30.189451

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'c39aeed3890c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('staff_users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=True),
    sa.Column('lastName', sa.String(length=120), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password', sa.String(length=80), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('student_users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=True),
    sa.Column('lastName', sa.String(length=120), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password', sa.String(length=80), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('teacher_users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=True),
    sa.Column('lastName', sa.String(length=120), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password', sa.String(length=80), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('profiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('breathecodeID', sa.String(length=100), nullable=False),
    sa.Column('size', sa.String(length=20), nullable=False),
    sa.Column('address', sa.String(length=200), nullable=False),
    sa.Column('phone', sa.String(length=120), nullable=False),
    sa.Column('cohort', sa.String(length=80), nullable=False),
    sa.Column('rut', sa.String(length=100), nullable=False),
    sa.ForeignKeyConstraint(['student_id'], ['student_users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('breathecodeID'),
    sa.UniqueConstraint('rut'),
    sa.UniqueConstraint('student_id')
    )
    op.create_table('student_questionnaries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('staff_user', sa.Integer(), nullable=False),
    sa.Column('questionnarie_details', sa.String(length=200), nullable=False),
    sa.ForeignKeyConstraint(['staff_user'], ['staff_users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('staff_user')
    )
    op.create_table('teacher_questionnaries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('staff_user', sa.Integer(), nullable=False),
    sa.Column('questionnarie_details', sa.String(length=200), nullable=False),
    sa.ForeignKeyConstraint(['staff_user'], ['staff_users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('staff_user')
    )
    op.create_table('credit_notes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('amount', sa.String(length=100), nullable=False),
    sa.Column('urlPDF', sa.String(length=200), nullable=False),
    sa.Column('rut', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['rut'], ['profiles.rut'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('rut')
    )
    op.create_table('enrrollment_agreements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('urlPDF', sa.String(length=200), nullable=False),
    sa.Column('breathecodeID', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['breathecodeID'], ['profiles.breathecodeID'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('breathecodeID')
    )
    op.create_table('financing_agreements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('months', sa.String(length=100), nullable=False),
    sa.Column('monthlyFee', sa.String(length=100), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('rut', sa.Integer(), nullable=False),
    sa.Column('urlPDF', sa.String(length=200), nullable=False),
    sa.ForeignKeyConstraint(['rut'], ['profiles.rut'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('rut')
    )
    op.create_table('invoices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('amount', sa.String(length=100), nullable=False),
    sa.Column('urlPDF', sa.String(length=200), nullable=False),
    sa.Column('rut', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['rut'], ['profiles.rut'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('rut')
    )
    op.create_table('job_profiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('breathecodeID', sa.Integer(), nullable=False),
    sa.Column('urlPDF', sa.String(length=200), nullable=False),
    sa.ForeignKeyConstraint(['breathecodeID'], ['profiles.breathecodeID'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('breathecodeID')
    )
    op.create_table('payments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('amount', sa.String(length=100), nullable=False),
    sa.Column('urlPDF', sa.String(length=200), nullable=False),
    sa.Column('payment_method', sa.String(length=200), nullable=False),
    sa.Column('bank', sa.String(length=200), nullable=False),
    sa.Column('rut', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['rut'], ['profiles.rut'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('rut')
    )
    op.create_table('projection_questions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('questionnarie_id', sa.Integer(), nullable=False),
    sa.Column('question', sa.String(length=200), nullable=False),
    sa.Column('status', sa.String(length=120), nullable=False),
    sa.ForeignKeyConstraint(['questionnarie_id'], ['teacher_questionnaries.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('questionnarie_id')
    )
    op.create_table('ruts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('rut_id', sa.Integer(), nullable=False),
    sa.Column('urlPDF', sa.String(length=200), nullable=False),
    sa.ForeignKeyConstraint(['rut_id'], ['profiles.rut'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('rut_id')
    )
    op.create_table('strength_questions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('questionnarie_id', sa.Integer(), nullable=False),
    sa.Column('question', sa.String(length=200), nullable=False),
    sa.Column('status', sa.String(length=120), nullable=False),
    sa.ForeignKeyConstraint(['questionnarie_id'], ['teacher_questionnaries.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('questionnarie_id')
    )
    op.create_table('student_questions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('questionnarie_id', sa.Integer(), nullable=False),
    sa.Column('question', sa.String(length=200), nullable=False),
    sa.Column('status', sa.String(length=120), nullable=False),
    sa.Column('breathecodeID', sa.String(length=100), nullable=False),
    sa.ForeignKeyConstraint(['questionnarie_id'], ['student_questionnaries.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('breathecodeID'),
    sa.UniqueConstraint('questionnarie_id')
    )
    op.create_table('weakness_questions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('questionnarie_id', sa.Integer(), nullable=False),
    sa.Column('question', sa.String(length=200), nullable=False),
    sa.Column('status', sa.String(length=120), nullable=False),
    sa.ForeignKeyConstraint(['questionnarie_id'], ['teacher_questionnaries.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('questionnarie_id')
    )
    op.create_table('student_answers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('answer', sa.String(length=200), nullable=False),
    sa.Column('teacher_user', sa.Integer(), nullable=False),
    sa.Column('breathecodeID', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('questionnarie_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['breathecodeID'], ['profiles.breathecodeID'], ),
    sa.ForeignKeyConstraint(['question_id'], ['student_questions.id'], ),
    sa.ForeignKeyConstraint(['questionnarie_id'], ['student_questionnaries.id'], ),
    sa.ForeignKeyConstraint(['teacher_user'], ['teacher_users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('breathecodeID'),
    sa.UniqueConstraint('question_id'),
    sa.UniqueConstraint('questionnarie_id'),
    sa.UniqueConstraint('teacher_user')
    )
    op.create_table('teacher_projection_answers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('projectionQuestion_id', sa.Integer(), nullable=False),
    sa.Column('answer', sa.String(length=200), nullable=False),
    sa.Column('teacher_user', sa.Integer(), nullable=False),
    sa.Column('breathecodeID', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('questionnarie_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['breathecodeID'], ['profiles.breathecodeID'], ),
    sa.ForeignKeyConstraint(['projectionQuestion_id'], ['projection_questions.id'], ),
    sa.ForeignKeyConstraint(['questionnarie_id'], ['teacher_questionnaries.id'], ),
    sa.ForeignKeyConstraint(['teacher_user'], ['teacher_users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('breathecodeID'),
    sa.UniqueConstraint('projectionQuestion_id'),
    sa.UniqueConstraint('questionnarie_id'),
    sa.UniqueConstraint('teacher_user')
    )
    op.create_table('teacher_strength_answers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('strenghtQuestion_id', sa.Integer(), nullable=False),
    sa.Column('answer', sa.String(length=200), nullable=False),
    sa.Column('teacher_user', sa.Integer(), nullable=False),
    sa.Column('breathecodeID', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('questionnarie_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['breathecodeID'], ['profiles.breathecodeID'], ),
    sa.ForeignKeyConstraint(['questionnarie_id'], ['teacher_questionnaries.id'], ),
    sa.ForeignKeyConstraint(['strenghtQuestion_id'], ['strength_questions.id'], ),
    sa.ForeignKeyConstraint(['teacher_user'], ['teacher_users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('breathecodeID'),
    sa.UniqueConstraint('questionnarie_id'),
    sa.UniqueConstraint('strenghtQuestion_id'),
    sa.UniqueConstraint('teacher_user')
    )
    op.create_table('teacher_weakness_answers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('weaknessQuestion_id', sa.Integer(), nullable=False),
    sa.Column('answer', sa.String(length=200), nullable=False),
    sa.Column('teacher_user', sa.Integer(), nullable=False),
    sa.Column('breathecodeID', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('questionnarie_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['breathecodeID'], ['profiles.breathecodeID'], ),
    sa.ForeignKeyConstraint(['questionnarie_id'], ['teacher_questionnaries.id'], ),
    sa.ForeignKeyConstraint(['teacher_user'], ['teacher_users.id'], ),
    sa.ForeignKeyConstraint(['weaknessQuestion_id'], ['weakness_questions.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('breathecodeID'),
    sa.UniqueConstraint('questionnarie_id'),
    sa.UniqueConstraint('teacher_user'),
    sa.UniqueConstraint('weaknessQuestion_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('teacher_weakness_answers')
    op.drop_table('teacher_strength_answers')
    op.drop_table('teacher_projection_answers')
    op.drop_table('student_answers')
    op.drop_table('weakness_questions')
    op.drop_table('student_questions')
    op.drop_table('strength_questions')
    op.drop_table('ruts')
    op.drop_table('projection_questions')
    op.drop_table('payments')
    op.drop_table('job_profiles')
    op.drop_table('invoices')
    op.drop_table('financing_agreements')
    op.drop_table('enrrollment_agreements')
    op.drop_table('credit_notes')
    op.drop_table('teacher_questionnaries')
    op.drop_table('student_questionnaries')
    op.drop_table('profiles')
    op.drop_table('teacher_users')
    op.drop_table('student_users')
    op.drop_table('staff_users')
    op.drop_table('roles')
    # ### end Alembic commands ###
