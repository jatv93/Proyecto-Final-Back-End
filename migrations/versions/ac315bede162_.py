"""empty message

Revision ID: ac315bede162
Revises: 1705234a0d0a
Create Date: 2020-07-26 16:50:19.110155

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ac315bede162'
down_revision = '1705234a0d0a'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('staff_users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('lastName', sa.String(length=120), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password', sa.String(length=80), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('role_id')
    )
    op.create_table('student_users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('lastName', sa.String(length=120), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password', sa.String(length=80), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('role_id')
    )
    op.create_table('teacher_users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('lastName', sa.String(length=120), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password', sa.String(length=80), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('role_id')
    )
    op.create_table('student_questionnaries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('staff_user', sa.Integer(), nullable=False),
    sa.Column('questionnarie_details', sa.String(length=200), nullable=False),
    sa.ForeignKeyConstraint(['staff_user'], ['staff_users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('staff_user')
    )
    op.create_table('teacher_questionnaries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('staff_user', sa.Integer(), nullable=False),
    sa.Column('questionnarie_details', sa.String(length=200), nullable=False),
    sa.ForeignKeyConstraint(['staff_user'], ['staff_users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('staff_user')
    )
    op.create_table('projection_questions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('questionnarie_id', sa.Integer(), nullable=False),
    sa.Column('question', sa.String(length=200), nullable=False),
    sa.Column('status', sa.String(length=120), nullable=False),
    sa.ForeignKeyConstraint(['questionnarie_id'], ['teacher_questionnaries.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('questionnarie_id')
    )
    op.create_table('ruts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('rut_id', sa.Integer(), nullable=False),
    sa.Column('urlPDF', sa.String(length=200), nullable=False),
    sa.ForeignKeyConstraint(['rut_id'], ['profiles.rut'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('rut_id')
    )
    op.create_table('strength_questions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('questionnarie_id', sa.Integer(), nullable=False),
    sa.Column('question', sa.String(length=200), nullable=False),
    sa.Column('status', sa.String(length=120), nullable=False),
    sa.ForeignKeyConstraint(['questionnarie_id'], ['teacher_questionnaries.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('questionnarie_id')
    )
    op.create_table('student_questions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('questionnarie_id', sa.Integer(), nullable=False),
    sa.Column('question', sa.String(length=200), nullable=False),
    sa.Column('status', sa.String(length=120), nullable=False),
    sa.Column('breathecodeID', sa.String(length=100), nullable=False),
    sa.ForeignKeyConstraint(['questionnarie_id'], ['student_questionnaries.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('breathecodeID'),
    sa.UniqueConstraint('questionnarie_id')
    )
    op.create_table('weakness_questions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('questionnarie_id', sa.Integer(), nullable=False),
    sa.Column('question', sa.String(length=200), nullable=False),
    sa.Column('status', sa.String(length=120), nullable=False),
    sa.ForeignKeyConstraint(['questionnarie_id'], ['teacher_questionnaries.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('questionnarie_id')
    )
    op.create_table('student_answers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('answer', sa.String(length=200), nullable=False),
    sa.Column('teacher_user', sa.Integer(), nullable=False),
    sa.Column('breathecodeID', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('questionnarie_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['breathecodeID'], ['profiles.breathecodeID'], ),
    sa.ForeignKeyConstraint(['question_id'], ['student_questions.id'], ),
    sa.ForeignKeyConstraint(['questionnarie_id'], ['student_questionnaries.id'], ),
    sa.ForeignKeyConstraint(['teacher_user'], ['teacher_users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('breathecodeID'),
    sa.UniqueConstraint('question_id'),
    sa.UniqueConstraint('questionnarie_id'),
    sa.UniqueConstraint('teacher_user')
    )
    op.create_table('teacher_projection_answers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('projectionQuestion_id', sa.Integer(), nullable=False),
    sa.Column('answer', sa.String(length=200), nullable=False),
    sa.Column('teacher_user', sa.Integer(), nullable=False),
    sa.Column('breathecodeID', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('questionnarie_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['breathecodeID'], ['profiles.breathecodeID'], ),
    sa.ForeignKeyConstraint(['projectionQuestion_id'], ['projection_questions.id'], ),
    sa.ForeignKeyConstraint(['questionnarie_id'], ['teacher_questionnaries.id'], ),
    sa.ForeignKeyConstraint(['teacher_user'], ['teacher_users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('breathecodeID'),
    sa.UniqueConstraint('projectionQuestion_id'),
    sa.UniqueConstraint('questionnarie_id'),
    sa.UniqueConstraint('teacher_user')
    )
    op.create_table('teacher_strength_answers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('strenghtQuestion_id', sa.Integer(), nullable=False),
    sa.Column('answer', sa.String(length=200), nullable=False),
    sa.Column('teacher_user', sa.Integer(), nullable=False),
    sa.Column('breathecodeID', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('questionnarie_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['breathecodeID'], ['profiles.breathecodeID'], ),
    sa.ForeignKeyConstraint(['questionnarie_id'], ['teacher_questionnaries.id'], ),
    sa.ForeignKeyConstraint(['strenghtQuestion_id'], ['strength_questions.id'], ),
    sa.ForeignKeyConstraint(['teacher_user'], ['teacher_users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('breathecodeID'),
    sa.UniqueConstraint('questionnarie_id'),
    sa.UniqueConstraint('strenghtQuestion_id'),
    sa.UniqueConstraint('teacher_user')
    )
    op.create_table('teacher_weakness_answers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('weaknessQuestion_id', sa.Integer(), nullable=False),
    sa.Column('answer', sa.String(length=200), nullable=False),
    sa.Column('teacher_user', sa.Integer(), nullable=False),
    sa.Column('breathecodeID', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('questionnarie_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['breathecodeID'], ['profiles.breathecodeID'], ),
    sa.ForeignKeyConstraint(['questionnarie_id'], ['teacher_questionnaries.id'], ),
    sa.ForeignKeyConstraint(['teacher_user'], ['teacher_users.id'], ),
    sa.ForeignKeyConstraint(['weaknessQuestion_id'], ['weakness_questions.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('breathecodeID'),
    sa.UniqueConstraint('questionnarie_id'),
    sa.UniqueConstraint('teacher_user'),
    sa.UniqueConstraint('weaknessQuestion_id')
    )
    op.drop_table('staffUsers')
    op.drop_table('teacherUsers')
    op.drop_table('studentUsers')
    op.drop_constraint(None, 'profiles', type_='foreignkey')
    op.create_foreign_key(None, 'profiles', 'student_users', ['student_id'], ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'profiles', type_='foreignkey')
    op.create_foreign_key(None, 'profiles', 'studentUsers', ['student_id'], ['id'])
    op.create_table('studentUsers',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=120), nullable=False),
    sa.Column('lastName', sa.VARCHAR(length=120), nullable=False),
    sa.Column('email', sa.VARCHAR(length=120), nullable=False),
    sa.Column('password', sa.VARCHAR(length=80), nullable=False),
    sa.Column('role_id', sa.INTEGER(), nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), nullable=False),
    sa.CheckConstraint('is_active IN (0, 1)'),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('role_id')
    )
    op.create_table('teacherUsers',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=120), nullable=False),
    sa.Column('lastName', sa.VARCHAR(length=120), nullable=False),
    sa.Column('email', sa.VARCHAR(length=120), nullable=False),
    sa.Column('password', sa.VARCHAR(length=80), nullable=False),
    sa.Column('role_id', sa.INTEGER(), nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), nullable=False),
    sa.CheckConstraint('is_active IN (0, 1)'),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('role_id')
    )
    op.create_table('staffUsers',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=120), nullable=False),
    sa.Column('lastName', sa.VARCHAR(length=120), nullable=False),
    sa.Column('email', sa.VARCHAR(length=120), nullable=False),
    sa.Column('password', sa.VARCHAR(length=80), nullable=False),
    sa.Column('role_id', sa.INTEGER(), nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), nullable=False),
    sa.CheckConstraint('is_active IN (0, 1)'),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('role_id')
    )
    op.drop_table('teacher_weakness_answers')
    op.drop_table('teacher_strength_answers')
    op.drop_table('teacher_projection_answers')
    op.drop_table('student_answers')
    op.drop_table('weakness_questions')
    op.drop_table('student_questions')
    op.drop_table('strength_questions')
    op.drop_table('ruts')
    op.drop_table('projection_questions')
    op.drop_table('teacher_questionnaries')
    op.drop_table('student_questionnaries')
    op.drop_table('teacher_users')
    op.drop_table('student_users')
    op.drop_table('staff_users')
    # ### end Alembic commands ###
